import { useState, useEffect, useCallback } from 'react'
import useLocalStorage from 'hooks/useLocalStorage'
import axios from 'axios'
export default url => { 
    const baseUrl = 'https://conduit.productionready.io/api/'
    const [isLoading, setLoading] = useState(false)
    const [response, setResponse] = useState(null)
    const [error, setError] = useState(null)
    const [options, setOptions] = useState({})

    const [token] = useLocalStorage('token')
    const doFetch = useCallback((options = {}) => {
        setOptions(options)
        setLoading(true)
    }, [])
    useEffect(() => {
        const requestOptions = {
            ...options,
            ...{
                headers: {
                    authorization: token ? `Token ${token}` : ''
                }
            }
        }
        if(!isLoading) {
          return
        }
        axios(`${baseUrl + url}`, requestOptions).then(res => {
          console.log(res)
          setLoading(false)
          setResponse(res.data)
        }).catch(err => {
          console.log(err)
          setLoading(false)
          setError(err.response.data)
    
        })
      }, [isLoading, options, url, token])
    return [{isLoading, response, error}, doFetch]
}