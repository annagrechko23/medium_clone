import { useState, useEffect, useCallback } from 'react'
import useLocalStorage from 'hooks/useLocalStorage'
import axios from 'axios'
export default url => {
  const baseUrl = 'https://conduit.productionready.io/api/'
  const [isLoading, setLoading] = useState(false)
  const [response, setResponse] = useState(null)
  const [error, setError] = useState(null)
  const [options, setOptions] = useState({})

  const [token] = useLocalStorage('token')
  const doFetch = useCallback((options = {}) => {
    setOptions(options)
    setLoading(true)
  }, [])
  useEffect(() => {
    let skipGetResponseAfterDestroy = false
    const requestOptions = {
      ...options,
      ...{
        headers: {
          authorization: token ? `Token ${token}` : ''
        }
      }
    }
    if (!isLoading) {
      return
    }
    axios(`${baseUrl + url}`, requestOptions).then(res => {
      if (!skipGetResponseAfterDestroy) {
        setLoading(false)
        setResponse(res.data)
      }
    }).catch(err => {
      if (!skipGetResponseAfterDestroy) {
        setLoading(false)
        setError(err.response.data)
      }
    })
    return () => {
      skipGetResponseAfterDestroy = true
    }
  }, [isLoading, options, url, token])
  return [{ isLoading, response, error }, doFetch]
}