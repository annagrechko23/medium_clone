import { createContext, useReducer } from 'react'
import React from 'react'

const inititalState = {
    isLoading: false,
    isLoggedIn: null,
    currentUser: null
}
const reducer = (state, action) => {
    switch (action.type) {
        case 'LOADING':
            return { ...state, isLoading: true }
        case 'SET_AUTHORIZED':
            return {
                ...state,
                isLoggedIn: true,
                isLoading: true,
                currentUser: action.payload
            }
        case 'SET_UNAUTHORIZED':
            return {
                ...state,
                isLoggedIn: false,
            }
        case 'LOGOUT':
            return {
                ...inititalState,
                isLoggedIn: false
            }
        default:
            return state
    }
}
reducer(inititalState, { type: 'LOGOUT' })
export const CurrentUserContext = createContext([{}, () => { }])
export const CurrentUserProvider = ({ children }) => {
    const value = useReducer(reducer, inititalState)
    // const [state, setState] = useState({
    //     isLoading: false,
    //     isLoggedIn: null,
    //     currentUser: null
    // })
    return (
        <CurrentUserContext.Provider value={value}>{children}</CurrentUserContext.Provider>
    )
}
